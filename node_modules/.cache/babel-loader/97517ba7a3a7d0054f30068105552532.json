{"remainingRequest":"/Users/smile/Documents/vue-5-27/news-app/node_modules/babel-loader/lib/index.js!/Users/smile/Documents/vue-5-27/news-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/smile/Documents/vue-5-27/news-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/smile/Documents/vue-5-27/news-app/src/views/ChannelNews.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/smile/Documents/vue-5-27/news-app/src/views/ChannelNews.vue","mtime":1589783190000},{"path":"/Users/smile/Documents/vue-5-27/news-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/smile/Documents/vue-5-27/news-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/smile/Documents/vue-5-27/news-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/smile/Documents/vue-5-27/news-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvc21pbGUvRG9jdW1lbnRzL3Z1ZS01LTI3L25ld3MtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE5ld3NMaXN0IGZyb20gIi4uL2NvbXBvbmVudHMvbmV3cy9OZXdzTGlzdCI7CmltcG9ydCBQYWdlciBmcm9tICIuLi9jb21wb25lbnRzL1BhZ2VyIjsKaW1wb3J0ICogYXMgbmV3c1NlcnYgZnJvbSAiLi4vc2VydmljZXMvbmV3c1NlcnZpY2UiOwppbXBvcnQgTG9hZGluZyBmcm9tICIuLi9jb21wb25lbnRzL0xvYWRpbmciOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUGFnZXI6IFBhZ2VyLAogICAgTmV3c0xpc3Q6IE5ld3NMaXN0LAogICAgTG9hZGluZzogTG9hZGluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpbWl0OiAxNSwKICAgICAgdG90YWw6IDAsCiAgICAgIHBhbmVsTnVtYmVyOiAxMCwKICAgICAgbmV3czogW10sCiAgICAgIGlzTG9hZGluZzogdHJ1ZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwYWdlOiBmdW5jdGlvbiBwYWdlKCkgewogICAgICByZXR1cm4gK3RoaXMuJHJvdXRlLnF1ZXJ5LnBhZ2UgfHwgMTsKICAgIH0sCiAgICBjaGFubmVsTmFtZTogZnVuY3Rpb24gY2hhbm5lbE5hbWUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY2hhbm5lbHMgPSB0aGlzLiRzdG9yZS5zdGF0ZS5jaGFubmVscy5kYXRhOwoKICAgICAgaWYgKGNoYW5uZWxzLmxlbmd0aCA+IDApIHsKICAgICAgICB2YXIgY2hhbm5lbCA9IGNoYW5uZWxzLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtLmNoYW5uZWxJZCA9PT0gX3RoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gY2hhbm5lbC5uYW1lOwogICAgICB9CgogICAgICByZXR1cm4gIiI7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDorr7nva7miYDmnInmlrDpl7vnm7jlhbPmlbDmja4KICAgIHNldERhdGFzOiBmdW5jdGlvbiBzZXREYXRhcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi5pc0xvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3c1NlcnYuZ2V0TmV3cyhfdGhpczIuJHJvdXRlLnBhcmFtcy5pZCwgX3RoaXMyLnBhZ2UsIF90aGlzMi5saW1pdCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3AgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMyLnRvdGFsID0gcmVzcC5hbGxOdW07CiAgICAgICAgICAgICAgICBfdGhpczIubmV3cyA9IHJlc3AuY29udGVudGxpc3Q7CiAgICAgICAgICAgICAgICBfdGhpczIuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBoYW5kbGVDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShuZXdQYWdlKSB7CiAgICAgIC8vIOWmguS9leWcqOS7o+eggeS4reWvvOiIqgogICAgICAvLyDlkb3ku6TlvI/lr7zoiKoKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICBwYWdlOiBuZXdQYWdlCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5zZXREYXRhcygpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIOebkeaOp+afkOS6m+aVsOaNrueahOWPmOWMlu+8jOW9k+aVsOaNruWPmOWMluaXtuimgeWBmuS4gOS6m+S6i+WEvwogICAgIiRyb3V0ZS5wYXJhbXMuaWQiOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgLy/kuIDlvIDlp4vnmoTmlbDmja7kuZ/opoHlvZPlgZrmmK/kuIDnp43lj5jljJYKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLnNldERhdGFzKCk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["ChannelNews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,KAAA,QAAA,MAAA,yBAAA;AACA,OAAA,OAAA,MAAA,uBAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,CAFA;AAGA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA;;AACA,UAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,SAAA,KAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAAA,SAAA,CAAA;AACA,eAAA,OAAA,CAAA,IAAA;AACA;;AACA,aAAA,EAAA;AACA;AAXA,GAfA;AA4BA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,sBAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AADA;AAAA,uBAEA,QAAA,CAAA,OAAA,CACA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EADA,EAEA,MAAA,CAAA,IAFA,EAGA,MAAA,CAAA,KAHA,CAFA;;AAAA;AAEA,gBAAA,IAFA;AAOA,gBAAA,MAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA;AACA,gBAAA,MAAA,CAAA,IAAA,GAAA,IAAA,CAAA,WAAA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,KAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KAZA;AAaA,IAAA,YAbA,wBAaA,OAbA,EAaA;AACA;AACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA;AADA,OAAA;AAKA,WAAA,QAAA;AACA;AAtBA,GA5BA;AAoDA,EAAA,KAAA,EAAA;AACA;AACA,wBAAA;AACA,MAAA,SAAA,EAAA,IADA;AACA;AACA,MAAA,OAFA,qBAEA;AACA,aAAA,QAAA;AACA;AAJA;AAFA;AApDA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"type-title\">\n      {{ channelName }}\n    </div>\n    <Loading v-if=\"isLoading\" />\n    <NewsList v-else :news=\"news\" />\n    <Pager\n      :page=\"page\"\n      :limit=\"limit\"\n      :total=\"total\"\n      :panelNumber=\"panelNumber\"\n      @pageChange=\"handleChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport NewsList from \"../components/news/NewsList\";\nimport Pager from \"../components/Pager\";\nimport * as newsServ from \"../services/newsService\";\nimport Loading from \"../components/Loading\";\nexport default {\n  components: {\n    Pager,\n    NewsList,\n    Loading,\n  },\n  data() {\n    return {\n      limit: 15,\n      total: 0,\n      panelNumber: 10,\n      news: [],\n      isLoading: true,\n    };\n  },\n  computed: {\n    page() {\n      return +this.$route.query.page || 1;\n    },\n    channelName() {\n      var channels = this.$store.state.channels.data;\n      if (channels.length > 0) {\n        var channel = channels.find((item) => item.channelId === this.$route.params.id)\n        return channel.name;\n      }\n      return \"\";\n    },\n  },\n  methods: {\n    // 设置所有新闻相关数据\n    async setDatas() {\n      this.isLoading = true;\n      var resp = await newsServ.getNews(\n        this.$route.params.id,\n        this.page,\n        this.limit\n      );\n      this.total = resp.allNum;\n      this.news = resp.contentlist;\n      this.isLoading = false;\n    },\n    handleChange(newPage) {\n      // 如何在代码中导航\n      // 命令式导航\n      this.$router.push({\n        query: {\n          page: newPage,\n        },\n      });\n      this.setDatas();\n    },\n  },\n  watch: {\n    // 监控某些数据的变化，当数据变化时要做一些事儿\n    \"$route.params.id\": {\n      immediate: true, //一开始的数据也要当做是一种变化\n      handler() {\n        this.setDatas();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n.type-title {\n  font-size: 2em;\n  color: #888;\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 10px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}